{"version":3,"sources":["components/Navigation/Navigation.js","components/Header/Header.js","components/Footer/Footer.js","components/Pages/About.js","components/PortfolioPage/Portfoliopage.js","components/Pages/Projects.js","components/Container/Container.js","App.js","serviceWorker.js","index.js"],"names":["Navigation","Nav","defaultActiveKey","as","to","className","useLocation","pathname","Header","Navbar","collapseOnSelect","expand","bg","variant","Brand","href","Toggle","aria-controls","Collapse","id","Footer","About","class","Portfoliopage","props","Card","style","width","Img","src","image","Body","Title","name","Text","description","technology","map","data","Button","target","homepage","Projects","state","repoData","this","giturl","git_url","techhology","Component","Container","Jumbotron","fluid","exact","path","component","withRouter","Contact","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.cec9023b.chunk.js","sourcesContent":["import React from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport { Nav } from 'react-bootstrap';\n\nexport default function Navigation() {\n  return (\n    <Nav defaultActiveKey='/home' as='ul'>\n      <Link\n        to='/'\n        className={(useLocation.pathname === '/') === 'About' ? 'nav-link-active': 'nav-link'}>\n        About\n      </Link>\n      <Link\n        to='/portfolio'\n        className={useLocation.pathname === '/portfolio' ? 'nav-link-active' : 'nav-link'}>\n        Portfolio\n      </Link>\n      <Link\n        to='/contact'\n        className={useLocation.pathname === '/contact' ? 'nav-link-active' : 'nav-link'}>\n        Contact Me\n      </Link>\n    </Nav>\n  );\n}\n","import React from 'react';\nimport { Navbar } from 'react-bootstrap';\nimport Navigation from '../Navigation/Navigation';\n\nexport default function Header() {\n  return (\n    <header>\n        <Navbar collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\"> \n            <Navbar.Brand href=\"#home\">Ankit Mudvari</Navbar.Brand>\n            <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n            <Navbar.Collapse id=\"responsive-navbar-nav\">\n                <Navigation />\n            </Navbar.Collapse>\n        </Navbar>\n    </header>\n  );\n}","import React from 'react'\nimport './Footer.css';\n\nexport default function Footer() {\n    return (\n        <nav className='navbar fixed-bottom bg-dark footer'>\n            <span className=\"footer-text copyright\">Â© All rights reserved. Ankit Mudvari 2020</span>\n        </nav>\n    )\n}\n","import React from 'react'\n\nexport default function About() {\n    return (\n    <div>\n            <h1 class=\"home-heading\">\n                Hello, I'm Ankit Mudvari,<br />\n            </h1>\n            <h2 class=\"home-heading2\"><strong>a full stack web\n                    developer.</strong><br />\n            </h2>\n\n            <h4 class=\"home-subheading\">\n                I was born and raised in a small but beautiful coutry <strong>Nepal</strong><br />\n                and I am currently working for an Atlanta based Automotive Parts\n                Company&nbsp;<br />\n                as an IT Engineer.<br />\n                Being dad of two wonderful and hyperactive kids, most of my<br />\n                time is spent with them. On my spare time, I love exploring new\n                technology&nbsp;<br />\n                especially leaning towards Web development & design, Automation,<br />\n                Machine Learning and some AI.\n            </h4>\n    </div>\n    )\n}\n","import React from 'react';\nimport { Card, Button } from 'react-bootstrap';\n\nexport default function Portfoliopage(props) {\n  return (\n    <Card style={{ width: '100%' }}>\n      <Card.Img variant='top' src={`/images/${props.image}`}/>\n      <Card.Body>\n        <Card.Title><strong><u>{props.name}</u></strong></Card.Title>\n        <Card.Text>{props.description}<br /><br />\n        <strong>Technology: </strong>\n        {props.technology.map(data => (\n            <li>{data}</li>\n        ))}\n        </Card.Text>\n        <Button target='blank' href={props.homepage}>{props.name}</Button>\n      </Card.Body>\n    </Card>\n  );\n}\n","import React, { Component } from 'react';\nimport Portfolio from '../PortfolioPage/Portfoliopage';\nimport repoData from '../../repoDetail.json';\n\nexport default class Projects extends Component {\n  state = {\n    repoData,\n  };\n  render() {\n    return (\n      <div>\n        <h2>Projects</h2>\n        <hr />\n        {this.state.repoData.map((data) => (\n          <Portfolio\n            id={data.id}\n            name={data.name}\n            giturl={data.git_url}\n            description={data.description}\n            homepage={data.homepage}\n            image={data.image}\n            technology={data.techhology}\n          />\n        ))}\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport { Route, withRouter } from 'react-router-dom';\nimport './Container.css'\n\nimport About from '../Pages/About';\nimport Projects from '../Pages/Projects'\nimport Contact from '../Pages/Contact'\nimport { Jumbotron } from 'react-bootstrap';\n\nexport default function Container() {\n    return (\n    <main className='m-modal'>\n        <div className='container fluid maincontainer'>\n            <div className='row'>\n                <Jumbotron fluid>\n                    <div>\n                        <Route exact path='/' component={About} />\n                        <Route exact path='/portfolio' component={withRouter(Projects)} />\n                        <Route exact path='/contact' component={Contact} />\n                    </div>\n                </Jumbotron>\n            </div>\n        </div>\n    </main>\n    )\n}\n","import React from 'react';\nimport './App.css';\nimport Header from './components/Header/Header';\nimport Footer from './components/Footer/Footer';\nimport Container from './components/Container/Container';\n\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\n\nfunction App() {\n  return (\n    <div className='App'>\n      <Router>\n        <Header />\n        <Container />\n        <Footer />\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}